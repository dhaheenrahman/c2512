CREATE USER Employees IDENTIFIED BY 123;

GRANT CONNECT, RESOURCE TO Employees;

ALTER USER Employees QUOTA UNLIMITED ON USERS;

---------------------------------=---------------

CREATE TABLE Employees(
    id NUMBER GENERATED BY DEFAULT AS IDENTITY START WITH 1 INCREMENT BY 1 PRIMARY KEY,
    name VARCHAR2(50) NOT NULL,
    department VARCHAR2(50),
    salary NUMBER(8,2),
    join_date DATE
    );

CREATE TABLE DEPARTMENTS(
    ID NUMBER PRIMARY KEY,
    NAME VARCHAR2(50)
    );

INSERT INTO Employees VALUES(1,'Alice','HR',50000, TO_DATE('2023-01-01','YYYY-MM-DD'));
INSERT INTO Employees VALUES(2, 'Bob', 'IT', 70000, TO_DATE('2023-02-15','YYYY-MM-DD'));
INSERT INTO Employees VALUES(3, 'Charlie', 'Finance', 60000,TO_DATE('2023-03-01','YYYY-MM-DD')) ; 


UPDATE Employees SET Salary = 75000 WHERE Name = 'Bob';

DELETE FROM Employees WHERE ID = 3;

SELECT * FROM Employees;

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (4, 'Diana', 'HR', 55000, TO_DATE('2023-04-01', 'YYYY-MM-DD'));

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (5, 'Eve', 'IT', 80000, TO_DATE('2023-05-15', 'YYYY-MM-DD'));

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (6, 'Frank', 'Finance', 62000, TO_DATE('2023-06-10', 'YYYY-MM-DD'));

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (7, 'Grace', 'Marketing', 45000, TO_DATE('2023-07-05', 'YYYY-MM-DD'));

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (8, 'Hank', 'Marketing', 47000, TO_DATE('2023-08-12', 'YYYY-MM-DD'));

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (9, 'Ivy', 'IT', 72000, TO_DATE('2023-09-03', 'YYYY-MM-DD'));

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (10, 'Jack', 'HR', 53000, TO_DATE('2023-10-20', 'YYYY-MM-DD'));

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (11, 'Karen', 'Finance', 61000, TO_DATE('2023-11-15', 'YYYY-MM-DD'));

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (12, 'Leo', NULL, 40000, TO_DATE('2023-12-01', 'YYYY-MM-DD'));

INSERT INTO Employees (id, name, department, salary, join_date) 
VALUES (13, 'Mona', 'HR', 59000, TO_DATE('2023-12-10', 'YYYY-MM-DD'));

SELECT name,salary FROM Employees WHERE salary = (SELECT MAX(salary) FROM Employees);

SELECT * FROM Employees WHERE salary > (SELECT AVG(salary) FROM Employees);

SELECT DEPARTMENT, SUM(SALARY) FROM EMPLOYEES GROUP BY DEPARTMENT;

SELECT DEPARTMENT, COUNT(*) FROM EMPLOYEES GROUP BY DEPARTMENT;

INSERT INTO Departments (id, name) VALUES (1, 'HR');
INSERT INTO Departments (id, name) VALUES (2, 'IT');
INSERT INTO Departments (id, name) VALUES (3, 'Finance');
INSERT INTO Departments (id, name) VALUES (4, 'Marketing');
INSERT INTO Departments (id, name) VALUES (5, 'Operations');

SELECT Employees.NAME, DEPARTMENTS.NAME
FROM EMPLOYEES LEFT JOIN DEPARTMENTS
ON EMPLOYEES.DEPARTMENT = DEPARTMENTS.NAME;

SELECT MAX(SALARY) AS MAX_SALARY, MIN(SALARY) AS MIN_SALARY FROM EMPLOYEES;

SELECT SUM(SALARY) AS SUM_OF_SALARIES FROM EMPLOYEES;

SELECT DEPARTMENTS.NAME, AVG(EMPLOYEES.SALARY) 
FROM EMPLOYEES INNER JOIN DEPARTMENTS
ON EMPLOYEES.DEPARTMENT = DEPARTMENTS.NAME
GROUP BY DEPARTMENTS.NAME; 

SELECT DEPARTMENT, SUM(SALARY) AS TOTAL_SALARY
FROM EMPLOYEES
GROUP BY DEPARTMENT
HAVING SUM(SALARY) > 100000;

ALTER TABLE EMPLOYEES ADD(MANAGER_ID NUMBER);

UPDATE Employees SET manager_id = NULL WHERE id IN (1, 2, 3); -- Managers don't have managers themselves

UPDATE Employees SET manager_id = 1 WHERE id IN (4); -- Diana reports to Alice (ID = 1)
UPDATE Employees SET manager_id = 2 WHERE id IN (5, 9); -- Eve and Ivy report to Bob (ID = 2)
UPDATE Employees SET manager_id = 3 WHERE id IN (6, 11); -- Frank and Karen report to Charlie (ID = 3)
UPDATE Employees SET manager_id = 1 WHERE id = 10; -- Jack reports to Alice (ID = 1)
UPDATE Employees SET manager_id = 8 WHERE id IN (7, 8); -- Grace and Hank report to an undefined marketing manager (ID = 8)

SELECT emp.* 
FROM EMPLOYEES emp JOIN EMPLOYEES emp2
ON emp.ID = emp2.manager_id
WHERE emp.JOIN_DATE > emp2.JOIN_DATE;

SELECT * FROM EMPLOYEES WHERE
SALARY = (SELECT MAX(SALARY) FROM EMPLOYEES
WHERE SALARY < (SELECT MAX(SALARY) FROM EMPLOYEES));

SELECT MAX(SALARY) FROM EMPLOYEES
WHERE SALARY < (SELECT MAX(SALARY) FROM EMPLOYEES);

SELECT MAX(SALARY) FROM EMPLOYEES
WHERE SALARY < (80000);

SELECT SALARY FROM (SELECT SALARY FROM EMPLOYEES ORDER BY SALARY DESC FETCH FIRST 2 ROWS ONLY) ORDER BY SALARY ASC FETCH FIRST 1 ROWS ONLY;

SELECT * FROM EMPLOYEES WHERE DEPARTMENT IS NULL;

SELECT DISTINCT DEPARTMENT FROM EMPLOYEES;

SELECT COUNT(*) FROM EMPLOYEES GROUP BY DEPARTMENT ;


SELECT * FROM DEPARTMENTS;

SELECT * FROM Employees;

COMMIT;